#小白学习中，Git常用命令
从远程仓库clone一个项目的时候，Git自动将此项目命名为origin，并下载所有的数据，创建一个指向它的master的分支，在本地命名为origin/maser，但是无法在本地更改它的数据。接着，Git会在本地创建一个master的分支，始于origin上master分支相同的位置，并且都指向origin上的分支
git status 查看当前分支的状态
git add {file} 添加修改的文件/文件夹
 git add -U 仅监控已经被add的文件（tracked文件），将被修改的文件提交到暂存区，不包括new
 git add . 把所有的变化提交到暂存区，包括modified new，不包括delete
 git add -A 把所有tracked和untracked的文件都提交
git commit [-m message]提交
git commit –amend 补充提交，不会产生新的commit
git review 提交到远程分支
git review -r origin master
git checkout –b {branchname} [远程仓库名]/[分支名称] 新建一个分支
#git push origin {branchname} 这样远程仓库也有这个分支
#git pull origin {origin_branchname} 本地新建的分支和远程的分支关联
git branch –a 查看所有分支
git checkout {branchname} 切换分支
git log 查看合并日志
git rebase 变基
 变基是把当前分支修改的内容打包，它产生的结果是显得所有的操作像是在一条流水线上完成的
 eg:
	git checkout wcx;
	git rebase master;
	就是将wcx分支的修改打包，以基底分支(master)作为对象应用补丁
git stash 将修改过的文件存储到git栈暂存，可以切换到其他分支工作.
 git stash list 显示栈中的信息
 git stash pop 弹出（使用）栈中最近一次的记录
 git stash clear 清空栈中的内容
 git stash apply stash@{n} 恢复到第n次的提交
 git stash apply 不指定就默认是最近的一次
* 如果不小心删除了git stash list中的记录，即执行了drop命令；此时git并没删除更改的东西，只是移除了对它的引用
 可以使用 git fsck 命令查看数据库中对象的连接和有效性；使用参数 --unreachable 显示出所有不可访问的对象。
 根据ID可以恢复 git stash list中的记录
取消提交
1.没有push的情况
  git reset –soft {commitId} 保持代码不变，退后到某次提交前，不涉及index的回退
  git reset –hard {commitId} 退后到某次提交前，同时改变代码
  git reset -mixed 保留源码，只将git commit和index信息回退到某个版本。git reset默认形式
  git reset -hard HEAD 退后到最新一次提交
  git reset -hard HEAD^ 退后到上一次提交
  git reset -hard HEAD^^ 退后到上上一次提交
2.已经push
  git revert commit-id

推荐几个网站：
http://www.cnblogs.com/lengyue0030/p/6390478.html
http://www.cnblogs.com/wzyxidian/p/5519429.html
